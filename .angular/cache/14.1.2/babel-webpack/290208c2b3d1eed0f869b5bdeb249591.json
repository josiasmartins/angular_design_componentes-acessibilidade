{"ast":null,"code":"import { canReportError } from './util/canReportError';\nimport { toSubscriber } from './util/toSubscriber';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nexport let Observable = /*#__PURE__*/(() => {\n  class Observable {\n    constructor(subscribe) {\n      this._isScalar = false;\n\n      if (subscribe) {\n        this._subscribe = subscribe;\n      }\n    }\n\n    lift(operator) {\n      const observable = new Observable();\n      observable.source = this;\n      observable.operator = operator;\n      return observable;\n    }\n\n    subscribe(observerOrNext, error, complete) {\n      const {\n        operator\n      } = this;\n      const sink = toSubscriber(observerOrNext, error, complete);\n\n      if (operator) {\n        sink.add(operator.call(sink, this.source));\n      } else {\n        sink.add(this.source || config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable ? this._subscribe(sink) : this._trySubscribe(sink));\n      }\n\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        if (sink.syncErrorThrowable) {\n          sink.syncErrorThrowable = false;\n\n          if (sink.syncErrorThrown) {\n            throw sink.syncErrorValue;\n          }\n        }\n      }\n\n      return sink;\n    }\n\n    _trySubscribe(sink) {\n      try {\n        return this._subscribe(sink);\n      } catch (err) {\n        if (config.useDeprecatedSynchronousErrorHandling) {\n          sink.syncErrorThrown = true;\n          sink.syncErrorValue = err;\n        }\n\n        if (canReportError(sink)) {\n          sink.error(err);\n        } else {\n          console.warn(err);\n        }\n      }\n    }\n\n    forEach(next, promiseCtor) {\n      promiseCtor = getPromiseCtor(promiseCtor);\n      return new promiseCtor((resolve, reject) => {\n        let subscription;\n        subscription = this.subscribe(value => {\n          try {\n            next(value);\n          } catch (err) {\n            reject(err);\n\n            if (subscription) {\n              subscription.unsubscribe();\n            }\n          }\n        }, reject, resolve);\n      });\n    }\n\n    _subscribe(subscriber) {\n      const {\n        source\n      } = this;\n      return source && source.subscribe(subscriber);\n    }\n\n    [Symbol_observable]() {\n      return this;\n    }\n\n    pipe(...operations) {\n      if (operations.length === 0) {\n        return this;\n      }\n\n      return pipeFromArray(operations)(this);\n    }\n\n    toPromise(promiseCtor) {\n      promiseCtor = getPromiseCtor(promiseCtor);\n      return new promiseCtor((resolve, reject) => {\n        let value;\n        this.subscribe(x => value = x, err => reject(err), () => resolve(value));\n      });\n    }\n\n  }\n\n  Observable.create = subscribe => {\n    return new Observable(subscribe);\n  };\n\n  return Observable;\n})();\n\nfunction getPromiseCtor(promiseCtor) {\n  if (!promiseCtor) {\n    promiseCtor = config.Promise || Promise;\n  }\n\n  if (!promiseCtor) {\n    throw new Error('no Promise impl found');\n  }\n\n  return promiseCtor;\n}","map":{"version":3,"names":["canReportError","toSubscriber","observable","Symbol_observable","pipeFromArray","config","Observable","constructor","subscribe","_isScalar","_subscribe","lift","operator","source","observerOrNext","error","complete","sink","add","call","useDeprecatedSynchronousErrorHandling","syncErrorThrowable","_trySubscribe","syncErrorThrown","syncErrorValue","err","console","warn","forEach","next","promiseCtor","getPromiseCtor","resolve","reject","subscription","value","unsubscribe","subscriber","pipe","operations","length","toPromise","x","create","Promise","Error"],"sources":["C:/Users/josias.m.caitano/OneDrive - Accenture/Documents/projetos/alura/angular/formacao-angular/angular_design_componentes_acessibilidade/node_modules/rxjs/_esm2015/internal/Observable.js"],"sourcesContent":["import { canReportError } from './util/canReportError';\nimport { toSubscriber } from './util/toSubscriber';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nexport class Observable {\n    constructor(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    lift(operator) {\n        const observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    }\n    subscribe(observerOrNext, error, complete) {\n        const { operator } = this;\n        const sink = toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            sink.add(operator.call(sink, this.source));\n        }\n        else {\n            sink.add(this.source || (config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?\n                this._subscribe(sink) :\n                this._trySubscribe(sink));\n        }\n        if (config.useDeprecatedSynchronousErrorHandling) {\n            if (sink.syncErrorThrowable) {\n                sink.syncErrorThrowable = false;\n                if (sink.syncErrorThrown) {\n                    throw sink.syncErrorValue;\n                }\n            }\n        }\n        return sink;\n    }\n    _trySubscribe(sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                sink.syncErrorThrown = true;\n                sink.syncErrorValue = err;\n            }\n            if (canReportError(sink)) {\n                sink.error(err);\n            }\n            else {\n                console.warn(err);\n            }\n        }\n    }\n    forEach(next, promiseCtor) {\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor((resolve, reject) => {\n            let subscription;\n            subscription = this.subscribe((value) => {\n                try {\n                    next(value);\n                }\n                catch (err) {\n                    reject(err);\n                    if (subscription) {\n                        subscription.unsubscribe();\n                    }\n                }\n            }, reject, resolve);\n        });\n    }\n    _subscribe(subscriber) {\n        const { source } = this;\n        return source && source.subscribe(subscriber);\n    }\n    [Symbol_observable]() {\n        return this;\n    }\n    pipe(...operations) {\n        if (operations.length === 0) {\n            return this;\n        }\n        return pipeFromArray(operations)(this);\n    }\n    toPromise(promiseCtor) {\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor((resolve, reject) => {\n            let value;\n            this.subscribe((x) => value = x, (err) => reject(err), () => resolve(value));\n        });\n    }\n}\nObservable.create = (subscribe) => {\n    return new Observable(subscribe);\n};\nfunction getPromiseCtor(promiseCtor) {\n    if (!promiseCtor) {\n        promiseCtor = config.Promise || Promise;\n    }\n    if (!promiseCtor) {\n        throw new Error('no Promise impl found');\n    }\n    return promiseCtor;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}