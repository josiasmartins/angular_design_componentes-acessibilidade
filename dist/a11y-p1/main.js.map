{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/shared/components/yes-no-button-group/yes-no-button-group.component.ts","./src/app/shared/components/yes-no-button-group/yes-no-button-group.component.html","./src/app/shared/components/yes-no-button-group/yes-no-button-group.module.ts","./src/app/shared/directives/disabled-control/disabled-control.directive.ts","./src/app/shared/directives/disabled-control/disabled-control.module.ts","./src/app/shared/directives/keyboard-manager/keyboard-manager-item.directive.ts","./src/app/shared/directives/keyboard-manager/keyboard-manager.directive.ts","./src/app/shared/directives/keyboard-manager/keyboard-manager.module.ts","./src/app/shared/services/unique-id/unique-id.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'a11y-p1';\r\n  // public yesNoAnswer = 'no';\r\n  public formGroup: UntypedFormGroup = null;\r\n\r\n  constructor(formBuilder: UntypedFormBuilder) {\r\n    this.formGroup = formBuilder.group({\r\n      yesNoAnswer: [{\r\n        value: 'no',\r\n        disabled: false\r\n      }]\r\n    });\r\n  }\r\n\r\n  public submit(): void {\r\n    this.formGroup.get('yesNoAnswer').disable();\r\n    console.log(this.formGroup.value, 'ibag');\r\n  }\r\n}\r\n","<main>\r\n  <h1 tabindex=\"0\">Form</h1>\r\n  <form [formGroup]=\"formGroup\" (ngSubmit)=\"submit()\">\r\n    <!--\r\n      formControlName: Esta diretiva é utilizada para ligar um elemento de\r\n      entrada do HTML a um Control de um FormGroup.\r\n    -->\r\n    <app-yes-no-button-group\r\n      [attr.appDisabedControl]=\"true\"\r\n      formControlName=\"yesNoAnswer\"\r\n      label=\"Are you good enough in Angular\"\r\n    ></app-yes-no-button-group>\r\n  </form>\r\n  <!-- (valueChange)=\"yesNoAnswer = $event\" -->\r\n  <!-- <span>yesNoAnswer value: {{ yesNoAnswer }}</span> -->\r\n  <button>Submit</button>\r\n</main>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { YesNoButtonGroupModule } from './shared/components/yes-no-button-group/yes-no-button-group.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { DisabledControlModule } from './shared/directives/disabled-control/disabled-control.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    YesNoButtonGroupModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, EventEmitter, forwardRef, Input, OnInit, Output } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { UniqueIdService } from '../../services/unique-id/unique-id.service';\r\n\r\n@Component({\r\n  selector: 'app-yes-no-button-group',\r\n  templateUrl: './yes-no-button-group.component.html',\r\n  styleUrls: ['./yes-no-button-group.component.scss'],\r\n  providers: [\r\n    {\r\n      /**\r\n       * NG_VALUE_ACESSOR: É um injection token que marca nosso componente para que\r\n       * seja injetado dentro da infraestrutura do formGroup.\r\n       */\r\n      provide: NG_VALUE_ACCESSOR,\r\n      multi: true,\r\n      // useExisting: use alguém\r\n      // forwardRef(): mostra só quando tiver a referencia\r\n      /**\r\n       * forwardRef: É usado quando o token ao qual precisamos nos referir para fins de DI é declarado, mas ainda não definido\r\n       */\r\n      useExisting: forwardRef(() => YesNoButtonGroupComponent)\r\n    }\r\n  ]\r\n})\r\nexport class YesNoButtonGroupComponent implements OnInit, ControlValueAccessor {\r\n  @Input() disabled = false;\r\n  @Input() public value: string = null;\r\n  @Input() public label = '';\r\n  // EventEmitter: vai emitir uma string\r\n  // Lembre-se da convenção no qual a @Output() property deve ter o mesmo nome da\r\n  // @Input() property acrescido com o sufixo Change\r\n  @Output() public valueChange = new EventEmitter<string>();\r\n  public id: string = null;\r\n  public options = YesNoButtonGroupOption;\r\n  public onChange = (value: string) => {};\r\n  public onTouched = () => {};\r\n\r\n  constructor(\r\n    private uniqueIdService: UniqueIdService,\r\n  ) {\r\n    this.id = uniqueIdService.generateuniqueIdWithPrefix('yes-no-button-group')\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  public writeValue(value: string): void {\r\n    this.value = value;\r\n    this.onChange(this.value);\r\n    this.valueChange.emit(this.value)\r\n  }\r\n\r\n  public registerOnChange(fn: (value: string) => void): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  public registerOnTouched(fn: () => void): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  public setDisabledState?(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n  }\r\n\r\n\r\n  public activate(value: string): void {\r\n    // this.value = value;\r\n    // // emit: notifica o mundo externo que o valor mudou\r\n    // this.valueChange.emit(this.value);\r\n    this.writeValue(value)\r\n  }\r\n\r\n}\r\n\r\nenum YesNoButtonGroupOption {\r\n  YES = 'yes',\r\n  NO = 'no'\r\n}\r\n","<!-- usando as tags semantica para acessibilidade -->\r\n<div\r\n  class=\"button-group\"\r\n  role=\"radiogroup\"\r\n  [attr.aria-label]=\"label\"\r\n>\r\n  <label>{{ label }}</label>\r\n  <div class=\"radio\">\r\n    <input\r\n      [attr.id]=\"id + '-yes'\"\r\n      type=\"radio\"\r\n      [attr.name]=\"id\"\r\n      [attr.checked]=\"value === options.YES\"\r\n      (change)=\"activate(options.YES)\"\r\n    >\r\n    <label\r\n      [attr.for]=\"id + '-yes'\"\r\n      class=\"button button-yes\"\r\n    >YES</label>\r\n  </div>\r\n  <div class=\"radio\">\r\n    <input\r\n      [attr.id]=\"id + '-no'\"\r\n      type=\"radio\"\r\n      [attr.name]=\"id\"\r\n      [attr.checked]=\"value === options.NO\"\r\n      (change)=\"activate(options.NO)\"\r\n    >\r\n    <label\r\n      [attr.for]=\"id + '-no'\"\r\n      class=\"button button-no\"\r\n    >No</label>\r\n  </div>\r\n</div>\r\n\r\n<!-- role: permite aplicar semantica e elementos não semanticos do html, incluse mudar a semantica da tag -->\r\n<!-- aria-labelledby:  -->\r\n<!-- <div\r\n  appKm\r\n  role=\"radiogroup\"\r\n  [attr.arialabelledby]=\"id\"\r\n  class=\"button-group\"\r\n>\r\n  <label [attr.id] id=\"id\" class=\"label\">{{ label }}</label> -->\r\n  <!-- [class.button-pressed]: se  for true, recebe a classe -->\r\n  <!-- tabindex: 0 ganha foco; -1 pula o elemento -->\r\n  <!-- <button\r\n    appKmItem\r\n    (focused)=\"activate(options.YES)\"  \r\n    role=\"radio\"\r\n    [attr.disabled]=\"disabled ? disabled : null\"\r\n    [attr.aria-checked]=\"value === options.YES\"\r\n    [attr.tabindex]=\"value === options.YES || value === null ? 0 : -1\"\r\n    class=\"button button-yes\"\r\n    type=\"button\"\r\n    (click)=\"activate(options.YES)\"\r\n    [class.button-pressed]=\"value === options.YES\"\r\n  >Yes</button>\r\n  <button\r\n    appKmItem\r\n    (focused)=\"activate(options.NO)\"  \r\n    role=\"radio\"\r\n    [attr.disabled]=\"disabled ? disabled : null\"\r\n    [attr.aria-labelledby]=\"value === options.NO\"\r\n    [attr.tabindex]=\"value === options.NO ? 0 : -1\"\r\n    class=\"button button-no\"\r\n    type=\"button\"\r\n    (click)=\"activate(options.NO)\"\r\n    [class.button-pressed]=\"value === options.NO\"\r\n  >No</button>\r\n</div> -->\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { YesNoButtonGroupComponent } from './yes-no-button-group.component';\r\nimport { KeyboardManagerModule } from '../../directives/keyboard-manager/keyboard-manager.module';\r\nimport { DisabledControlModule } from '../../directives/disabled-control/disabled-control.module';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [YesNoButtonGroupComponent],\r\n  imports: [\r\n    CommonModule,\r\n    KeyboardManagerModule,\r\n    DisabledControlModule\r\n  ],\r\n  schemas: [],\r\n  exports: [YesNoButtonGroupComponent]\r\n})\r\nexport class YesNoButtonGroupModule {  }\r\n","import { Directive, Input, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\n\r\n@Directive({\r\n  selector: '[appDisabledControl]'\r\n})\r\nexport class DisabledControlDirective implements OnChanges {\r\n\r\n  @Input() appDisabedControl = false;\r\n\r\n  constructor(\r\n    private ngControl: NgControl\r\n  ) {}\r\n\r\n  public ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.appDisabedControl) {\r\n      const action = this.appDisabedControl ? 'disable' : 'enable';\r\n      this.ngControl.control[action]();\r\n    }\r\n  }\r\n\r\n\r\n}","import { Directive, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { DisabledControlDirective } from './disabled-control.directive';\r\n\r\n@NgModule({\r\n  declarations: [DisabledControlDirective],\r\n  imports: [\r\n    CommonModule,\r\n  ],\r\n  exports: [DisabledControlDirective]\r\n})\r\nexport class DisabledControlModule {}","import { Directive, ElementRef, Output, EventEmitter } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appKmItem]'\r\n})\r\nexport class KeyboardManagerItemDirective {\r\n\r\n  @Output() public focused = new EventEmitter<void>();\r\n\r\n  constructor(\r\n    // ElementRef: embrulha o dom\r\n    private elementRef: ElementRef<HTMLElement>\r\n  ) {}\r\n\r\n  public focus(): void {\r\n    this.elementRef.nativeElement.focus();\r\n    this.focused.emit();\r\n  }\r\n\r\n  public isFocused(): boolean {\r\n    return this.elementRef.nativeElement === document.activeElement;\r\n  }\r\n}","import { ContentChildren, Directive, HostListener, QueryList } from '@angular/core';\r\nimport { KeyboardManagerItemDirective } from './keyboard-manager-item.directive';\r\n\r\n@Directive({\r\n  selector: '[appKm]'\r\n})\r\nexport class KeyboardManagerDirective {\r\n\r\n  // Contentchild: busca todo mundo que é filho do elemento KeyboardManagerDirective\r\n  // QueryList: atualiza dinamicamente as listas\r\n  @ContentChildren(KeyboardManagerItemDirective) public items: QueryList<KeyboardManagerItemDirective> = null;\r\n\r\n  @HostListener('keyup', ['$event'])\r\n  public manageKeys(event: KeyboardEvent): void { \r\n    // event.key: dá acesso a tecla pressionado\r\n    switch (event.key) {\r\n      case 'ArrowUp': \r\n        this.moveFocus(ArrowDirective.RIGHT).focus();\r\n        break;\r\n      case 'ArrowDown':\r\n        this.moveFocus(ArrowDirective.LEFT).focus();\r\n        break;\r\n      case 'ArrowLeft': \r\n        this.moveFocus(ArrowDirective.LEFT).focus();\r\n        break;\r\n      case 'ArrowRight':\r\n        this.moveFocus(ArrowDirective.RIGHT).focus();\r\n        break;\r\n    }\r\n  }\r\n\r\n  public moveFocus(direction: ArrowDirective): KeyboardManagerItemDirective {\r\n    const items = this.items.toArray();\r\n    console.log(this.items)\r\n    const currentSelectedIndex = items.findIndex(item => item.isFocused());\r\n    const targetElementFocus = items[currentSelectedIndex + direction];\r\n\r\n    if (targetElementFocus) {\r\n      return targetElementFocus;\r\n    }\r\n\r\n    return direction === ArrowDirective.LEFT \r\n      ? items[items.length - 1]\r\n      : items[0];\r\n  }\r\n}\r\n\r\nenum ArrowDirective {\r\n  LEFT = -1,\r\n  RIGHT = 1\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { KeyboardManagerDirective } from './keyboard-manager.directive';\r\nimport { KeyboardManagerItemDirective } from './keyboard-manager-item.directive';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    KeyboardManagerDirective,\r\n    KeyboardManagerItemDirective\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n  ],\r\n  exports: [\r\n    KeyboardManagerDirective,\r\n    KeyboardManagerItemDirective\r\n  ]\r\n})\r\nexport class KeyboardManagerModule {}","import { Injectable } from '@angular/core';\r\nimport * as uuid from 'uuid'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UniqueIdService {\r\n\r\n  public generateuniqueIdWithPrefix(prefix: string): string {\r\n    const uniqueId = this.generateUniqueId();\r\n    return `${prefix}-${uniqueId}`;\r\n  }\r\n\r\n  private generateUniqueId(): string {\r\n    return uuid.v1();\r\n  }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["AppComponent","constructor","formBuilder","formGroup","group","yesNoAnswer","value","disabled","submit","get","disable","console","log","i0","selectors","decls","vars","consts","template","ctx","BrowserModule","YesNoButtonGroupModule","FormsModule","ReactiveFormsModule","AppModule","bootstrap","declarations","imports","EventEmitter","forwardRef","NG_VALUE_ACCESSOR","YesNoButtonGroupComponent","uniqueIdService","YesNoButtonGroupOption","id","generateuniqueIdWithPrefix","ngOnInit","writeValue","onChange","valueChange","emit","registerOnChange","fn","registerOnTouched","onTouched","setDisabledState","isDisabled","activate","inputs","label","outputs","features","provide","multi","useExisting","CommonModule","KeyboardManagerModule","DisabledControlModule","exports","SimpleChanges","DisabledControlDirective","ngControl","ngOnChanges","changes","appDisabedControl","action","control","ElementRef","KeyboardManagerItemDirective","elementRef","focus","nativeElement","focused","isFocused","document","activeElement","QueryList","KeyboardManagerDirective","manageKeys","event","key","moveFocus","ArrowDirective","RIGHT","LEFT","direction","items","toArray","currentSelectedIndex","findIndex","item","targetElementFocus","length","contentQueries","uuid","UniqueIdService","prefix","uniqueId","generateUniqueId","v1","factory","providedIn","environment","production","enableProdMode","__NgCli_bootstrap_1","bootstrapModule","catch","err","error"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}